@font-face {
  font-family: 'Oswald-Bold';
  src: url('../fonts/oswald/Oswald-Bold.eot') format('embedded-opentype'),  url('../fonts/oswald/Oswald-Bold.woff') format('woff'), url('../fonts/oswald/Oswald-Bold.ttf')  format('truetype'), url('../fonts/oswald/Oswald-Bold.svg#Oswald-Bold') format('svg');
  font-weight: normal;
  font-style: normal;
}


@font-face {
  font-family: 'Oswald-Regular';
  src: url('../fonts/oswald/Oswald-Regular.eot') format('embedded-opentype'),  url('../fonts/oswald/Oswald-Regular.woff') format('woff'), url('../fonts/oswald/Oswald-Regular.ttf')  format('truetype'), url('../fonts/oswald/Oswald-Regular.svg#Oswald-Regular') format('svg');
  font-weight: normal;
  font-style: normal;
}



@font-face {
  font-family: 'Oswald-Light';
  src: url('../fonts/oswald/Oswald-Light.eot') format('embedded-opentype'),  url('../fonts/oswald/Oswald-Light.woff') format('woff'), url('../fonts/oswald/Oswald-Light.ttf')  format('truetype'), url('../fonts/oswald/Oswald-Light.svg#Oswald-Light') format('svg');
  font-weight: normal;
  font-style: normal;
}

//basic texy styles
h1,h2,h3,h4,h5,h6{
    text-transform: uppercase;
    font-family: 'oswald-bold';
    text-align: center;
    line-height: $line-height-base;
    line-height: $headings-line-height;
}

h1{
  font-size: $font-size-h1;
}

h2{
  font-size: $font-size-h2;
}
h3{
  font-size: $font-size-h3;
}

h4{
  font-size: $font-size-h4;
  font-family: 'oswald-regular';
}
h1, .h1,
h2, .h2,
h3, .h3 {
  margin-top: $line-height-computed;
  margin-bottom: ($line-height-computed / 2);

}
h4, .h4,
h5, .h5,
h6, .h6 {
  margin-top: ($line-height-computed / 2);
  margin-bottom: ($line-height-computed / 2);
}
// Body text
// -------------------------

p {
  margin: 0 0 ($line-height-computed / 2);
}

.lead {
  margin-bottom: $line-height-computed;
  font-size: floor(($font-size-base * 1.15));
  font-weight: 300;
  line-height: 1.4;

  @media (min-width: $screen-sm-min) {
    font-size: ($font-size-base * 1.5);
  }
}

p,a{
  font-size: $font-size-base;
  font-family: 'oswald-regular'; 
  text-decoration: none;
  color: inherit;
}
// Alignment
.text-left           { text-align: left; }
.text-right          { text-align: right; }
.text-center         { text-align: center; }
.text-justify        { text-align: justify; }
.text-nowrap         { white-space: nowrap; }

// Transformation
.text-lowercase      { text-transform: lowercase; }
.text-uppercase      { text-transform: uppercase; }
.text-capitalize     { text-transform: capitalize; }

//text color classes
.text-base{
  color: $darkest-blue;
}

.text-inverse{
  color: $white;
}

.text-highlited{
  color: $yellow;
}
//test class, do not use
.text-holder-dark{
  background: $darkest-blue;

}

hr{
    text-align: center;
    background: #ffe600;
    height: 2px;
    width: 171px;
    border: none;
}

// Blockquotes
blockquote {
  padding: ($line-height-computed / 2) $line-height-computed;
  margin: 0 0 $line-height-computed;
  font-size: $blockquote-font-size;
  border-left: 5px solid $blockquote-border-color;

  p,
  ul,
  ol {
    &:last-child {
      margin-bottom: 0;
    }
  }

  // Note: Deprecated small and .small as of v3.1.0
  // Context: https://github.com/twbs/bootstrap/issues/11660
  footer,
  small,
  .small {
    display: block;
    font-size: 80%; // back to default font-size
    line-height: $line-height-base;
    color: $blockquote-small-color;

    &:before {
      content: '\2014 \00A0'; // em dash, nbsp
    }
  }
}

// Opposite alignment of blockquote
//
// Heads up: `blockquote.pull-right` has been deprecated as of v3.1.0.
.blockquote-reverse,
blockquote.pull-right {
  padding-right: 15px;
  padding-left: 0;
  border-right: 5px solid $blockquote-border-color;
  border-left: 0;
  text-align: right;

  // Account for citation
  footer,
  small,
  .small {
    &:before { content: ''; }
    &:after {
      content: '\00A0 \2014'; // nbsp, em dash
    }
  }
}